{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kishorekumar\\\\Desktop\\\\mobatia\\\\movie\\\\src\\\\MoviesList.js\";\n\nclass MoviesList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      moviesList: ['tt2294629'],\n      searchTerm: ''\n    };\n\n    this.search = event => {\n      event.preventDefault();\n      axios.get(`https://www.omdbapi.com/?apikey=756abb2f&s=${this.state.searchTerm}&plot=full`).then(res => res.data).then(res => {\n        if (!res.Search) {\n          this.setState({\n            moviesList: []\n          });\n          return;\n        }\n\n        const moviesList = res.Search.map(movie => movie.imdbID);\n        this.setState({\n          moviesList\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      moviesList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.search,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for a movie\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), moviesList.length > 0 ? moviesList.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movieID: movie\n      }, movie, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Couldn't find any movie. Please search again using another search criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://www.omdbapi.com/?apikey=756abb2f&i=${this.props.movieID}&plot=full`).then(res => res.data).then(res => {\n      this.setState({\n        movieData: res\n      });\n    });\n  }\n\n  render() {\n    const {\n      Title,\n      Released,\n      Genre,\n      Plot,\n      Poster,\n      imdbRating\n    } = this.state.movieData;\n\n    if (!Poster || Poster === 'N/A') {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-image\",\n          style: {\n            backgroundImage: `url(${Poster})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Movie Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Released Date: \", Released]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Rating: \", imdbRating, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Plot && Plot.substr(0, 350)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: Genre && Genre.split(', ').map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: g\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MoviesList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 121,\n  columnNumber: 17\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/kishorekumar/Desktop/mobatia/movie/src/MoviesList.js"],"names":["MoviesList","React","Component","state","moviesList","searchTerm","search","event","preventDefault","axios","get","then","res","data","Search","setState","map","movie","imdbID","handleChange","target","value","render","length","MovieCard","movieData","componentDidMount","props","movieID","Title","Released","Genre","Plot","Poster","imdbRating","backgroundImage","substr","split","g","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["class MoviesList extends React.Component {\r\n    state = {\r\n        moviesList: ['tt2294629'],\r\n        searchTerm: ''\r\n    };\r\n\r\n    search = event => {\r\n        event.preventDefault();\r\n        axios\r\n            .get(\r\n                `https://www.omdbapi.com/?apikey=756abb2f&s=${\r\n                    this.state.searchTerm\r\n                }&plot=full`\r\n            )\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                if (!res.Search) {\r\n                    this.setState({ moviesList: [] });\r\n                    return;\r\n                }\r\n\r\n                const moviesList = res.Search.map(movie => movie.imdbID);\r\n                this.setState({\r\n                    moviesList\r\n                });\r\n            });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            searchTerm: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { moviesList } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.search}>\r\n                    <input\r\n                        placeholder=\"Search for a movie\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <i className=\"fa fa-search\" />\r\n                    </button>\r\n                </form>\r\n                {moviesList.length > 0 ? (\r\n                    moviesList.map(movie => (\r\n                        <MovieCard movieID={movie} key={movie} />\r\n                    ))\r\n                ) : (\r\n                    <p>\r\n                        Couldn't find any movie. Please search again using\r\n                        another search criteria.\r\n                    </p>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MovieCard extends React.Component {\r\n    state = {\r\n        movieData: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\r\n                `https://www.omdbapi.com/?apikey=756abb2f&i=${\r\n                    this.props.movieID\r\n                }&plot=full`\r\n            )\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                this.setState({ movieData: res });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Title,\r\n            Released,\r\n            Genre,\r\n            Plot,\r\n            Poster,\r\n            imdbRating\r\n        } = this.state.movieData;\r\n\r\n        if (!Poster || Poster === 'N/A') {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"movie-card-container\">\r\n                <div className=\"image-container\">\r\n                    <div\r\n                        className=\"bg-image\"\r\n                        style={{ backgroundImage: `url(${Poster})` }}\r\n                    />\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <h2>Movie Details</h2>\r\n                    <div>\r\n                        <h1>{Title}</h1>\r\n                        <small>Released Date: {Released}</small>\r\n                    </div>\r\n                    <h4>Rating: {imdbRating} / 10</h4>\r\n                    <p>{Plot && Plot.substr(0, 350)}</p>\r\n                    <div className=\"tags-container\">\r\n                        {Genre && Genre.split(', ').map(g => <span>{g}</span>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<MoviesList />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}